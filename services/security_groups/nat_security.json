{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates Security Group for NAT Services.",
  "Parameters": {
    "Vpc": {
      "Description": "VPC for this security group.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "CidrBlock": {
      "Description": "Cidr Address for the VPC to create the instances in.",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "Environment": {
      "Description": "Name of the environment to create the security group in.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "14",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "can contain only lower case alphanumeric characters."
    },
    "InternalBastionSecurityGroup": {
      "Type": "String"
    }
  },
  "Outputs": {
    "SecurityGroup": {
      "Value": {
        "Ref": "SecurityGroup"
      }
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Rules for allowing access to NAT HA Nodes",
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "RedisCloudIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "10000",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": "19999"
      }
    },
    "DNSIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "53",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "udp",
        "ToPort": "53"
      }
    },
    "HTTPIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "80",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": "80"
      }
    },
    "HTTPSIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "443",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": "443"
      }
    },
    "ICMPIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "-1",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "icmp",
        "ToPort": "-1"
      }
    },
    "NTPIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "123",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "udp",
        "ToPort": "123"
      }
    },
    "SyslogIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "CidrBlock"
        },
        "FromPort": "6514",
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": "6514"
      }
    },
    "SSHIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "InternalBastionSecurityGroup"
        }
      }
    },
    "HipchatIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "5222",
        "ToPort": "5223",
        "CidrIp": {
          "Ref": "CidrBlock"
        }
      }
    }
  }
}