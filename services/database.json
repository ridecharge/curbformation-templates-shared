{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Database Setup v1.0",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "14",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "can contain only lower case alphanumeric characters."
    },
    "Vpc": {
      "Description": "VPC to launch this database into.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "AllocatedStorage": {
      "Description": "Storage to allocate in GB.",
      "Type": "Number",
      "Default": "300",
      "ConstraintDescription": "Must be multiples of 100 from 100 to 3000",
      "AllowedValues": [
        "100",
        "300",
        "500",
        "1000",
        "2000",
        "3000"
      ]
    },
    "DBSubnetGroupName": {
      "Description": "The VPC DBSubnetGroupName to launch into.",
      "Type": "String"
    },
    "ApplicationName": {
      "Description": "Name of the database to be created in the instance.",
      "Type": "String",
      "AllowedPattern": "[a-z]*",
      "ConstraintDescription": "DBName must be lower case alpha characters only."
    },
    "DBInstanceClass": {
      "Description": "Database instance type.",
      "Type": "String",
      "Default": "db.m3.medium",
      "AllowedValues": [
        "db.m3.medium",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge"
      ],
      "ConstraintDescription": "Value must an allowed standard size."
    },
    "MasterUsername": {
      "Description": "Master Username for database.",
      "Type": "String",
      "Default": "rdsroot"
    },
    "MasterUserPassword": {
      "Description": "Master Password for database.",
      "Type": "String",
      "NoEcho": "true",
      "Default": "Password1234!"
    },
    "MultiAZ": {
      "Type": "String",
      "Default": "true"
    },
    "InstanceSecurityGroup": {
      "Type": "String"
    },
    "ProvisionIops": {
      "Description": "Whether to use provision iops.  Based off allocated storage size.",
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "Must be a string encoded boolean value"
    },
    "DatabaseType": {
      "Type": "String",
      "Default": "mysql",
      "AllowedValues": [
        "postgres",
        "mysql"
      ]
    }
  },
  "Outputs": {
    "Endpoint": {
      "Value": {
        "Fn::Join": [
          ":",
          [
            {
              "Fn::GetAtt": [
                "Database",
                "Endpoint.Address"
              ]
            },
            {
              "Fn::GetAtt": [
                "Database",
                "Endpoint.Port"
              ]
            }
          ]
        ]
      }
    },
    "SecurityGroup": {
      "Value": {
        "Ref": "SecurityGroup"
      }
    }
  },
  "Mappings": {
    "DatabaseTypes": {
      "postgres": {
        "Engine": "postgres",
        "EngineVersion": "9.3.5",
        "Port": "5432"
      },
      "mysql": {
        "Engine": "mysql",
        "EngineVersion": "5.6.21",
        "Port": "3306"
      }
    },
    "AllocatedStorage": {
      "100": {
        "Iops": "1000"
      },
      "300": {
        "Iops": "3000"
      },
      "500": {
        "Iops": "5000"
      },
      "1000": {
        "Iops": "10000"
      },
      "2000": {
        "Iops": "20000"
      },
      "3000": {
        "Iops": "30000"
      }
    }
  },
  "Conditions": {
    "UseProvisionedIops": {
      "Fn::Equals": [
        {
          "Ref": "ProvisionIops"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Application Database Security Group",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": {
              "Fn::FindInMap": [
                "DatabaseTypes",
                {
                  "Ref": "DatabaseType"
                },
                "Port"
              ]
            },
            "ToPort": {
              "Fn::FindInMap": [
                "DatabaseTypes",
                {
                  "Ref": "DatabaseType"
                },
                "Port"
              ]
            },
            "SourceSecurityGroupId": {
              "Ref": "InstanceSecurityGroup"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags": [
          {
            "Key": "Role",
            "Value": "database-security"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Application",
            "Value": {
              "Ref": "ApplicationName"
            }
          }
        ]
      }
    },
    "Database": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": {
          "Ref": "AllocatedStorage"
        },
        "DeletionPolicy": "Snapshot",
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBName": {
          "Ref": "ApplicationName"
        },
        "DBInstanceIdentifier": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Environment"
              },
              {
                "Ref": "ApplicationName"
              }
            ]
          ]
        },
        "Engine": {
          "Fn::FindInMap": [
            "DatabaseTypes",
            {
              "Ref": "DatabaseType"
            },
            "Engine"
          ]
        },
        "EngineVersion": {
          "Fn::FindInMap": [
            "DatabaseTypes",
            {
              "Ref": "DatabaseType"
            },
            "EngineVersion"
          ]
        },
        "MasterUsername": {
          "Ref": "MasterUsername"
        },
        "MasterUserPassword": {
          "Ref": "MasterUserPassword"
        },
        "MultiAZ": {
          "Ref": "MultiAZ"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroupName"
        },
        "StorageType": {
          "Fn::If": [
            "UseProvisionedIops",
            "io1",
            "gp2"
          ]
        },
        "Iops": {
          "Fn::If": [
            "UseProvisionedIops",
            {
              "Fn::FindInMap": [
                "AllocatedStorage",
                {
                  "Ref": "AllocatedStorage"
                },
                "Iops"
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Role",
            "Value": "database"
          }
        ]
      }
    }
  }
}