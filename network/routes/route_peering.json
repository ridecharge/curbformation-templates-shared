{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates routes between peered vpcs.",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch this private route into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "PrivateRouteTableA": {
      "Description": "First Private Route Table for source VPC.",
      "Type": "String",
      "AllowedPattern": "rtb-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid Route Table id."
    },
    "PrivateRouteTableB": {
      "Description": "Second Private Route Table for source VPC.",
      "Type": "String",
      "AllowedPattern": "rtb-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid Route Table id."
    },
    "PublicRouteTable": {
      "Description": "Public Route Table for source VPC.",
      "Type": "String",
      "AllowedPattern": "rtb-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid Route Table id."
    },
    "CidrBlock": {
      "Description": "CidrBlock of the Destination VPC.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18"
    },
    "VpcPeeringConnection": {
      "Description": "Pairing connection for the VPCs to route over.",
      "Type": "String"
    }
  },
  "Resources": {
    "PrivateRouteA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "CidrBlock"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableA"
        },
        "VpcPeeringConnectionId": {
          "Ref": "VpcPeeringConnection"
        }
      }
    },
    "PrivateRouteB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "CidrBlock"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableB"
        },
        "VpcPeeringConnectionId": {
          "Ref": "VpcPeeringConnection"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "CidrBlock"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "VpcPeeringConnectionId": {
          "Ref": "VpcPeeringConnection"
        }
      }
    }
  }
}
